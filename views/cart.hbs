{{> demo_notice message='Items in your cart will be tallied to <a href="https://stripe.com/docs/payments/accept-a-payment?platform=web&ui=elements#web-create-payment-intent" class="text-blurple">create a new Payment Intent</a>.'}}

<div class="bg-white">
  {{> header }}
  <main class="max-w-2xl mx-auto pt-16 pb-24 px-4 sm:px-6 lg:max-w-7xl lg:px-8">
    <h1 class="text-3xl font-extrabold tracking-tight text-gray-900 sm:text-4xl">Shopping Cart</h1>

    <div class="mt-12 lg:grid lg:grid-cols-12 lg:gap-x-12 lg:items-start xl:gap-x-16">
      <section aria-labelledby="cart-heading" class="lg:col-span-7">
        <h2 id="cart-heading" class="sr-only">Items in your shopping cart</h2>

        <ul id="order-items" role="list" class="border-t border-gray-200 divide-y divide-gray-200">
          <!-- Cart items -->
          <!-- HTML is dynamically generated via Javascript based on the cart in localStorage -->
        </ul>
      </section>

      <!-- Order summary -->
      <section aria-labelledby="summary-heading" class="mt-16 bg-gray-50 rounded-lg px-4 py-6 sm:p-6 lg:p-8 lg:mt-0 lg:col-span-5">
        <h2 id="summary-heading" class="text-lg font-medium text-gray-900">Order summary</h2>

        <dl class="mt-6 space-y-4">
          <div class="flex items-center justify-between">
            <dt class="text-sm text-gray-600">
              Subtotal
            </dt>
            <dd id="order-sub-total" class="text-sm font-medium text-gray-900">
            </dd>
          </div>
          <div class="border-t border-gray-200 pt-4 flex items-center justify-between">
            <dt class="flex items-center text-sm text-gray-600">
              <span>Shipping estimate</span>
              <a href="#" class="ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500">
                <span class="sr-only">Learn more about how shipping is calculated</span>
                <!-- Heroicon name: solid/question-mark-circle -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                </svg>
              </a>
            </dt>
            <dd id="order-shipping" class="text-sm font-medium text-gray-900">
            </dd>
          </div>
          <div class="border-t border-gray-200 pt-4 flex items-center justify-between">
            <dt class="flex text-sm text-gray-600">
              <span>Tax estimate</span>
              <a href="#" class="ml-2 flex-shrink-0 text-gray-400 hover:text-gray-500">
                <span class="sr-only">Learn more about how tax is calculated</span>
                <!-- Heroicon name: solid/question-mark-circle -->
                <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                  <path fill-rule="evenodd" d="M18 10a8 8 0 11-16 0 8 8 0 0116 0zm-8-3a1 1 0 00-.867.5 1 1 0 11-1.731-1A3 3 0 0113 8a3.001 3.001 0 01-2 2.83V11a1 1 0 11-2 0v-1a1 1 0 011-1 1 1 0 100-2zm0 8a1 1 0 100-2 1 1 0 000 2z" clip-rule="evenodd" />
                </svg>
              </a>
            </dt>
            <dd id="order-tax" class="text-sm font-medium text-gray-900">
            </dd>
          </div>
          <div class="border-t border-gray-200 pt-4 flex items-center justify-between">
            <dt class="text-base font-medium text-gray-900">
              Order total
            </dt>
            <dd id="order-total" class="text-base font-medium text-gray-900">
            </dd>
          </div>
        </dl>

        <div class="mt-6">
          <form id='checkout-form' action='/checkout' method='POST'>
            <button id='checkout-btn' type='submit' data-accent-color-btn class="w-full bg-accent-color border rounded-md shadow-sm py-3 px-4 text-base font-medium text-white hover:opacity-80 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-offset-gray-50 focus:ring-brand-color">
              Checkout
            </button>
          </form>
          <div class="w-max pt-4 m-auto text-sm text-gray-900 hover:underline">
            <a href="/products">Continue shopping</a>
          </div>
        </div>
      </section>
    </div>
  </main>
  {{> footer }}
</div>

<script>
  // ==========================================================================
  // Begin dynamic page rendering based on cart contents
  // ==========================================================================
  function formatPrice(amount, currency) {
    let price = (amount / 100).toFixed(2);
    let numberFormat = new Intl.NumberFormat(['en-US'], {
      style: 'currency',
      currency: currency,
      currencyDisplay: 'symbol',
    });
    return numberFormat.format(price);
  }

  // calculateCartSubTotal expects the cart to be structured as below.
  // This is currently defined in the products.hbs template
  //
  // [
  //   {
  //     id: '{{ price.product.id }}',
  //     images: ['{{ price.product.images }}'],
  //     name: '{{ price.product.name }}',
  //     quantity: 1,
  //     price: {
  //       id: '{{ price.id }}',
  //       unit_amount: {{ price.unit_amount }},
  //       currency: '{{ price.currency }}'
  //     }
  //   }
  //   ...
  //   ...
  // ]
  function calculateCartSubTotal(cart) {
    return Object.values(cart).reduce((total, {quantity, price}) => {
      return total + (price.unit_amount * quantity)
    }, 0);
  }

  const orderItems = document.getElementById('order-items');
  let cart = JSON.parse(sessionStorage.getItem('cart'))

  if (cart) {
    for (let [productId, product] of Object.entries(cart)) {
      let lineItem = document.createElement('li');
      lineItem.classList.add('flex', 'py-6', 'sm:py-10');
      lineItem.innerHTML = `
        <div class="flex-shrink-0">
          <img src="${product.images[0]}" alt="${product.name}" table class="w-24 h-24 rounded-md object-center object-cover sm:w-48 sm:h-48">
        </div>

        <div class="ml-4 flex-1 flex flex-col justify-between sm:ml-6">
          <div class="relative pr-9 sm:grid sm:grid-cols-2 sm:gap-x-6 sm:pr-0">
            <div>
              <div class="flex justify-between">
                <h3 class="text-sm">
                  <div class="text-lg text-gray-700 hover:text-gray-800">
                    ${product.name}
                  </a>
                </h3>
              </div>
              <p class="mt-1 text-sm font-medium text-gray-900">${formatPrice(product.price.unit_amount, product.price.currency)}</p>
            </div>

            <div class="mt-4 sm:mt-0 sm:pr-9">
              <label for="quantity-0" class="sr-only"></label>
              <!-- <select id="quantity-0" name="quantity-0" class="max-w-full rounded-md border border-gray-300 py-1.5 text-base leading-5 font-medium text-gray-700 text-left shadow-sm focus:outline-none focus:ring-1 focus:ring-accent-color-500 focus:border-accent-color-500 sm:text-sm">
                <option value="1">1</option>
                <option value="2">2</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
                <option value="8">8</option>
              </select> -->
              <div class="text-md text-gray-700">x ${ product.quantity }</div>

              <div class="absolute top-0 right-0">
                <button type="button" class="-m-2 p-2 inline-flex text-gray-400 cursor-default">
                  <span class="sr-only">Remove</span>
                  <!-- Heroicon name: solid/x -->
                  <svg class="h-5 w-5" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
                    <path fill-rule="evenodd" d="M4.293 4.293a1 1 0 011.414 0L10 8.586l4.293-4.293a1 1 0 111.414 1.414L11.414 10l4.293 4.293a1 1 0 01-1.414 1.414L10 11.414l-4.293 4.293a1 1 0 01-1.414-1.414L8.586 10 4.293 5.707a1 1 0 010-1.414z" clip-rule="evenodd" />
                  </svg>
                </button>
              </div>
            </div>
          </div>

          <p class="mt-4 flex text-sm text-gray-700 space-x-2">
            <!-- Heroicon name: solid/check -->
            <svg class="flex-shrink-0 h-5 w-5 text-green-500" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 20 20" fill="currentColor" aria-hidden="true">
              <path fill-rule="evenodd" d="M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z" clip-rule="evenodd" />
            </svg>
            <span>In stock</span>
          </p>
        </div>`;

      orderItems.appendChild(lineItem);
    }
  } else {
    orderItems.innerHTML = `
      <div class="mt-6">
        Your cart is empty. Check out some of our
        <a href="/products" class="text-accent-color hover:text-brand-color">products</a>!
      </div>`;
  }

  // NOTE: You should not calculate totals on the client side in a real world ecommerce application!
  // This opens up you up to malicious price adjustment. However this is a demo which doesn't
  // charge real cards or deal with real money or products so we're doing it for simplicity and illustration
  const orderTotal = document.getElementById('order-total');
  const orderSubTotal = document.getElementById('order-sub-total');
  const orderShipping = document.getElementById('order-shipping');
  const orderTax = document.getElementById('order-tax');
  const shippingFee = 0;
  const tax = 2000;

  // TO DO: Currency is hard coded here and really should be configurable
  orderSubTotal.innerHTML = formatPrice(calculateCartSubTotal(cart), 'USD');
  orderTotal.innerHTML = formatPrice(calculateCartSubTotal(cart) + shippingFee + tax, 'USD');
  orderShipping.innerHTML = formatPrice(shippingFee, 'USD');
  orderTax.innerHTML = formatPrice(tax, 'USD');

  const checkoutForm = document.getElementById('checkout-form');
  const checkoutBtn = document.getElementById('checkout-btn');

  checkoutBtn.addEventListener("click", function(e) {
    e.preventDefault();

    var index = 0;
    for (let [productId, product] of Object.entries(cart)) {
      var idInput = document.createElement("input");
      idInput.setAttribute("type", "hidden");
      idInput.setAttribute("name", `cart[${index}][id]`);
      idInput.setAttribute("value", productId);

      var quantityInput = document.createElement("input");
      quantityInput.setAttribute("type", "hidden");
      quantityInput.setAttribute("name", `cart[${index}][quantity]`);
      quantityInput.setAttribute("value", product.quantity);

      checkoutForm.appendChild(idInput);
      checkoutForm.appendChild(quantityInput);

      index += 1;
    };

    checkoutForm.submit();
  });
</script>
